{"version":3,"sources":["controller.js"],"names":[],"mappings":"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","file":"controller-compiled.js","sourcesContent":["/**\r\n * Created by UTOPIA SOFTWARE on 1/6/2018.\r\n */\r\n\r\n/**\r\n * file defines all View-Models, Controllers and Event Listeners used by the app\r\n *\r\n * The 'utopiasoftware_app_namespace' namespace variable has being defined in the base js file.\r\n * The author uses the terms 'method' and function interchangeably; likewise the terms 'attribute' and 'property' are\r\n * also used interchangeably\r\n */\r\n\r\n// define the controller namespace\r\nutopiasoftware[utopiasoftware_app_namespace].controller = {\r\n\r\n    /**\r\n     * property holds the Map objects which will contain a reference to dynamically loaded ES modules.\r\n     * NOTE: modules MUST BE deleted from this property i.e. the Map object when no longer need.\r\n     * This is to enable garbage collection and prevent memory leaks.\r\n     * NOTE: the keys used within the map will be identical to the same map value used in the SystemJS.config()\r\n     */\r\n    LOADED_MODULES: new Map(),\r\n    /**\r\n     * method contains the stratup/bootstrap code needed to initiate app logic execution\r\n     */\r\n    startup: function(){\r\n\r\n        // initialise the app libraries and plugins\r\n        ons.ready(async function () {\r\n            // set the default handler for the app\r\n            ons.setDefaultDeviceBackButtonListener(function(){\r\n                // does nothing for now!!\r\n            });\r\n\r\n            // displaying prepping message\r\n            $('#loader-modal-message').html(\"Loading App...\");\r\n            $('#loader-modal').get(0).show(); // show loader\r\n\r\n            if(window.localStorage.getItem(\"utopiasoftware-matchgains-onboarding\") &&\r\n                window.localStorage.getItem(\"utopiasoftware-matchgains-onboarding\") === \"done\"){ // there is a previous logged in user\r\n                // load the login page\r\n                $('ons-splitter').get(0).content.load(\"login-template\");\r\n            }\r\n            else{ // no previous logged in user\r\n                // load the signup page\r\n                $('ons-splitter').get(0).content.load(\"onboarding-template\");\r\n            }\r\n\r\n\r\n\r\n            // START ALL CORDOVA PLUGINS CONFIGURATIONS\r\n            try{\r\n                // lock the orientation of the device to 'PORTRAIT'\r\n                screen.orientation.lock('portrait');\r\n            }\r\n            catch(err){}\r\n\r\n            try { // START ALL THE CORDOVA PLUGINS CONFIGURATION WHICH REQUIRE PROMISE SYNTAX\r\n\r\n                // note: for most promises, we weill use async-wait syntax\r\n                // var a = await Promise.all([SystemJS.import('@syncfusion/ej2-base'), SystemJS.import('@syncfusion/ej2-dropdowns')]);\r\n            }\r\n            catch(err){\r\n            }\r\n            finally{\r\n                 // set status bar color\r\n                 StatusBar.backgroundColorByHexString(\"#00B2A0\");\r\n                 navigator.splashscreen.hide(); // hide the splashscreen\r\n                 utopiasoftware[utopiasoftware_app_namespace].model.isAppReady = true; // flag that app is fullyt loaded and ready\r\n            }\r\n\r\n        }); // end of ons.ready()\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model for the onboarding page\r\n     */\r\n    onboardingPageViewModel: {\r\n\r\n        /**\r\n         * holds the animation container for the 1st carousel item\r\n         */\r\n        carousel1AnimationContainer: null,\r\n\r\n        /**\r\n         * holds the animation container for the 2nd carousel item\r\n         */\r\n        carousel2AnimationContainer: null,\r\n\r\n        /**\r\n         * holds the animation container for the 3rd carousel item\r\n         */\r\n        carousel3AnimationContainer: null,\r\n\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#onboarding-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                        buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog'}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // initialise all the animation containers\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.onboardingPageViewModel.carousel1AnimationContainer =\r\n                    kendo.fx($(\"#onboarding-page ons-carousel-item.first .utopiasoftware-animation-container\"));\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.onboardingPageViewModel.carousel2AnimationContainer =\r\n                    kendo.fx($(\"#onboarding-page ons-carousel-item.second .utopiasoftware-animation-container\"));\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.onboardingPageViewModel.carousel3AnimationContainer =\r\n                    kendo.fx($(\"#onboarding-page ons-carousel-item.third .utopiasoftware-animation-container\"));\r\n\r\n                // hide the loader\r\n                await $('#loader-modal').get(0).hide();\r\n                // play the fade in animation for the 1st carousel\r\n                utopiasoftware[utopiasoftware_app_namespace].controller.onboardingPageViewModel.carousel1AnimationContainer.\r\n                    fade('in').duration(3000).play();\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n            // destroy the animation containers\r\n            kendo.destroy($(\"#onboarding-page\"));\r\n        },\r\n\r\n        /**\r\n         * method is used to track changes on the carousel slides\r\n         * @param event\r\n         */\r\n        carouselPostChange(event){\r\n\r\n            // use the switch case to determine what carousel is being shown\r\n            switch(event.originalEvent.activeIndex){\r\n                case 0:\r\n                    // animate/fade-in the content of the 1st carousel\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.onboardingPageViewModel.carousel1AnimationContainer.\r\n                    fade('in').duration(3000).play();\r\n                    // reset the opacity of all others items to zero(0) to make all other items invisible\r\n                    $(\"#onboarding-page ons-carousel-item:not(.first) .utopiasoftware-animation-container\").css(\"opacity\", \"0\");\r\n                    break;\r\n\r\n                case 1:\r\n                    // animate/fade-in the content of the 2nd carousel\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.onboardingPageViewModel.carousel2AnimationContainer.\r\n                    fade('in').duration(3000).play();\r\n                    // reset the opacity of all others items to zero(0) to make all other items invisible\r\n                    $(\"#onboarding-page ons-carousel-item:not(.second) .utopiasoftware-animation-container\").css(\"opacity\", \"0\");\r\n                    break;\r\n\r\n                case 2:\r\n                    // animate/fade-in the content of the 3rd carousel\r\n                    utopiasoftware[utopiasoftware_app_namespace].controller.onboardingPageViewModel.carousel3AnimationContainer.\r\n                    fade('in').duration(3000).play();\r\n                    // reset the opacity of all others items to zero(0) to make all other items invisible\r\n                    $(\"#onboarding-page ons-carousel-item:not(.third) .utopiasoftware-animation-container\").css(\"opacity\", \"0\");\r\n                    break;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"NEXT\" button on the slide is clicked\r\n         *\r\n         */\r\n        nextButtonClicked(){\r\n            // move to the next carousel item\r\n            $(\"#onboarding-page #onboarding-carousel\").get(0).next();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"PREVIOUS\" button on the slide is clicked\r\n         *\r\n         */\r\n        previousButtonClicked(){\r\n            // move to the next carousel item\r\n            $(\"#onboarding-page #onboarding-carousel\").get(0).prev();\r\n        },\r\n\r\n        /**\r\n         * method is triggered when the \"JOIN NOW\" button\r\n         */\r\n        joinNowButtonClicked(){\r\n\r\n            // load the login page\r\n            $('ons-splitter').get(0).content.load(\"login-template\");\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * this is the view-model/controller for the LOGIN page\r\n     */\r\n    loginPageViewModel: {\r\n\r\n        /**\r\n         * event is triggered when page is initialised\r\n         */\r\n        pageInit: function(event){\r\n\r\n            var $thisPage = $(event.target); // get the current page shown\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // call the function used to initialise the app page if the app is fully loaded\r\n            loadPageOnAppReady();\r\n\r\n            //function is used to initialise the page if the app is fully ready for execution\r\n            async function loadPageOnAppReady(){\r\n                // check to see if onsen is ready and if all app loading has been completed\r\n                if(!ons.isReady() || utopiasoftware[utopiasoftware_app_namespace].model.isAppReady === false){\r\n                    setTimeout(loadPageOnAppReady, 500); // call this function again after half a second\r\n                    return;\r\n                }\r\n\r\n                // listen for the back button event\r\n                $('#login-navigator').get(0).topPage.onDeviceBackButton = function(){\r\n                    ons.notification.confirm('Do you want to close the app?', {title: 'Exit',\r\n                        buttonLabels: ['No', 'Yes'], modifier: 'utopiasoftware-alert-dialog'}) // Ask for confirmation\r\n                        .then(function(index) {\r\n                            if (index === 1) { // OK button\r\n                                navigator.app.exitApp(); // Close the app\r\n                            }\r\n                        });\r\n                };\r\n\r\n                // hide the loader\r\n                await $('#loader-modal').get(0).hide();\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is shown\r\n         */\r\n        pageShow: function(){\r\n            // disable the swipeable feature for the app splitter\r\n            $('ons-splitter-side').removeAttr(\"swipeable\");\r\n\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            window.SoftInputMode.set('adjustPan'); // let the window/view-port 'pan' when the soft keyboard is displayed\r\n        },\r\n\r\n\r\n        /**\r\n         * method is triggered when page is hidden\r\n         */\r\n        pageHide: function(){\r\n            // adjust the window/view-port settings for when the soft keyboard is displayed\r\n            window.SoftInputMode.set('adjustResize'); // let the view 'resize' when the soft keyboard is displayed\r\n        },\r\n\r\n        /**\r\n         * method is triggered when page is destroyed\r\n         */\r\n        pageDestroy: function(){\r\n        }\r\n    }\r\n};\r\n\r\n\r\n"]}